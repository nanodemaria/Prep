{"numFailedTestSuites":0,"numFailedTests":0,"numPassedTestSuites":1,"numPassedTests":11,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":1,"numTotalTests":11,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1634568834130,"success":true,"testResults":[{"assertionResults":[{"ancestorTitles":["invocarCallback(cb)"],"failureMessages":[],"fullName":"invocarCallback(cb) should invoke the callback that is passed in","location":null,"status":"passed","title":"should invoke the callback that is passed in"},{"ancestorTitles":["operacionMatematica(n1, n2, cb)"],"failureMessages":[],"fullName":"operacionMatematica(n1, n2, cb) should return the callback function passing it the received arguments","location":null,"status":"passed","title":"should return the callback function passing it the received arguments"},{"ancestorTitles":["sumarArray(cb)"],"failureMessages":[],"fullName":"sumarArray(cb) should pass the sum of all array numbers to cb","location":null,"status":"passed","title":"should pass the sum of all array numbers to cb"},{"ancestorTitles":["forEach(arr, cb)"],"failureMessages":[],"fullName":"forEach(arr, cb) should pass all array items one by one to cb","location":null,"status":"passed","title":"should pass all array items one by one to cb"},{"ancestorTitles":["map(arr, cb)"],"failureMessages":[],"fullName":"map(arr, cb) should return an array of all the processed array elements","location":null,"status":"passed","title":"should return an array of all the processed array elements"},{"ancestorTitles":["filter(array)"],"failureMessages":[],"fullName":"filter(array) should return an array conteining the words that starts with \"a\"","location":null,"status":"passed","title":"should return an array conteining the words that starts with \"a\""},{"ancestorTitles":["deObjetoArray(objeto)"],"failureMessages":[],"fullName":"deObjetoArray(objeto) should return an array, where each element represents a key-value pair in the form of an array.","location":null,"status":"passed","title":"should return an array, where each element represents a key-value pair in the form of an array."},{"ancestorTitles":["numberOfCharacters(string)"],"failureMessages":[],"fullName":"numberOfCharacters(string) should return an object with the characters and the number of times they appear as a key-value pair","location":null,"status":"passed","title":"should return an object with the characters and the number of times they appear as a key-value pair"},{"ancestorTitles":["capicua(numero)"],"failureMessages":[],"fullName":"capicua(numero) should return Es capicua if the number is read from right to left","location":null,"status":"passed","title":"should return Es capicua if the number is read from right to left"},{"ancestorTitles":["deleteAbc(cadena)"],"failureMessages":[],"fullName":"deleteAbc(cadena) should return the modified string if it has the letters abc or the same string otherwise","location":null,"status":"passed","title":"should return the modified string if it has the letters abc or the same string otherwise"},{"ancestorTitles":["buscoInterseccion(arreglo1, arreglo2)"],"failureMessages":[],"fullName":"buscoInterseccion(arreglo1, arreglo2) should return the common elements of the array, and in case they do not match, return an empty array","location":null,"status":"passed","title":"should return the common elements of the array, and in case they do not match, return an empty array"}],"endTime":1634568834677,"message":"","name":"D:\\dev\\Prep\\04-JSIV\\homework\\tests\\JSIV.test.js","startTime":1634568834232,"status":"passed","summary":""}],"wasInterrupted":false}